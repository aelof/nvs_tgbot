import telebot
from config import TOKEN
import dbworker
import logging
from helpers import States, Target, exist_phone, hello, help,  add_to_db, get_ids,  db_get_link, db_insert_phone
from keyboards import (general_markup, geo_markup, kush_markup,
                       kush_house_markup, menu_markup, phone_markup)


logger = telebot.logger
telebot.logger.setLevel(logging.INFO)
# telebot.logger.setLevel(logging.DEBUG)


# You can set parse_mode by default. HTML or MARKDOWN
bot = telebot.TeleBot(TOKEN, parse_mode='HTML')

category_list = ['–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', '–ó–µ–º–µ–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', '–î–æ–º–∞', ]
menu_list = ['–ö–æ–Ω—Ç–∞–∫—Ç—ã', '–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫', '–ü–æ–º–æ—â—å', '–í–∏–¥–µ–æ –æ–±–∑–æ—Ä—ã']
back_list = ['‚Ü© –ù–∞–∑–∞–¥', '√ó –û—Ç–º–µ–Ω–∞', '‚Ü© –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']
kush_list = ['–¥–æ 1 –º–ª–Ω', '1 - 3 –º–ª–Ω', '3+ –º–ª–Ω',
             '5 - 7 –º–ª–Ω', '7 - 10 –º–ª–Ω', '10+ –º–ª–Ω']
teh_channel = -1001511156970


# handler for test
@bot.message_handler(commands=['test'])
def cmd_start(msg):
    if msg.from_user.id == 239090651:
        bot.send_message(teh_channel, f'{msg.chat.id}, {msg.from_user.id}')


@bot.message_handler(commands=['start', 'sendtoall'])
def cmd_start(msg):
    Target.clear_query()
    if msg.text == '/sendtoall':
        target_msg = bot.send_message(
            msg.chat.id, ' –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–æ—Å–ª–∞—Ç—å –¥—Ä—É–≥–∏–º:')
        bot.register_next_step_handler(target_msg, send_to_all)
    else:
        bot.send_message(
            msg.chat.id, f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ{hello}', reply_markup=menu_markup)
        us_id = msg.from_user.id
        us_firstname = msg.from_user.first_name
        us_username = msg.from_user.username
        us_date = msg.date
        add_to_db(user_id=us_id, firstname=us_firstname,
                  username=us_username, date=us_date)


def send_to_all(msg):
    for chat_id in get_ids():
        try:
            bot.send_message(chat_id, msg.text)
        except Exception as e:
            bot.send_message(
                msg.chat.id, f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞')


@bot.message_handler(func=lambda msg: msg.text in menu_list)
def search_obj(msg):
    if msg.text == '–ö–æ–Ω—Ç–∞–∫—Ç—ã':
        bot.send_message(
            msg.chat.id, '–û—Ç–ø—Ä–∞–≤–∫–∞ –±–ª–æ–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ —Å–æ –≤—Å–µ–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏ –∫–æ–º–ø–∞–Ω–∏–∏')
    elif msg.text == '–ü–æ–º–æ—â—å':
        bot.send_message(
            msg.chat.id, help)
    elif msg.text == '–í–∏–¥–µ–æ –æ–±–∑–æ—Ä—ã':
        bot.send_message(
            msg.chat.id, 'its still empty')
    elif msg.text == '–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫':
        bot.send_message(
            msg.chat.id, '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ', reply_markup=phone_markup)


# return to main menu or cancel to share phone number
@bot.message_handler(func=lambda msg: msg.text in back_list)
def back(msg):
    if msg.text == '‚Ü© –ù–∞–∑–∞–¥':
        bot.send_message(msg.chat.id,
                         "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –æ–±—ä–µ–∫—Ç–∞", reply_markup=geo_markup)
        dbworker.set_state(msg.chat.id, States.GEO.value)
        Target.clear_query()
    elif msg.text == '‚Ü© –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.send_message(msg.chat.id,
                         "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=menu_markup)
        # dbworker.set_state(msg.chat.id, States.CAT.value)
    else:
        bot.send_message(
            msg.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=menu_markup)


@bot.message_handler(func=lambda msg: msg.text == '–ù–∞–π—Ç–∏ –æ–±—ä–µ–∫—Ç')
def search_obj(msg):
    bot.send_message(msg.chat.id,
                     '–•–æ—Ä–æ—à–æ üëå\n—Å–µ–π—á–∞—Å —è –ø–æ–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å –í–∞–º –æ–±—ä–µ–∫—Ç\
                            \n–≤—ã–±–µ—Ä–µ—Ç–µ –ª–æ–∫–∞—Ü–∏—é:',
                     reply_markup=geo_markup)
    dbworker.set_state(msg.chat.id, States.GEO.value)


@bot.message_handler(func=lambda msg: dbworker.get_current_state(msg.chat.id) == States.GEO.value)
def entering_kush(msg):
    if msg.text in ['–ì–µ–ª–µ–Ω–¥–∂–∏–∫', '–ê–Ω–∞–ø–∞', '–õ–∞–≥–æ-–ù–∞–∫–∏']:
        Target.add_to_query(msg.text)
        bot.send_message(msg.chat.id,
                         "–° –ª–æ–∫–∞—Ü–∏–µ–π –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏—Å—å! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–µ–º —á—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", reply_markup=general_markup)
        dbworker.set_state(msg.chat.id, States.CAT.value)
    else:
        bot.send_message(msg.chat.id,
                         "–í—ã–±–µ—Ä–µ—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ")


@bot.message_handler(func=lambda msg: dbworker.get_current_state(msg.chat.id) == States.CAT.value)
def investment(msg):
    Target.add_to_query(msg.text)
    if msg.text in category_list:
        if Target.show_query()[1] == '–î–æ–º–∞':
            bot.send_message(msg.chat.id,
                             '–ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–µ–º –±—é–¥–∂–µ—Ç', reply_markup=kush_house_markup)
        else:
            bot.send_message(msg.chat.id,
                             '–ê —Ç–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–µ–º –±—é–¥–∂–µ—Ç', reply_markup=kush_markup)
        dbworker.set_state(msg.chat.id, States.KUSH.value)
    else:
        bot.send_message(msg.chat.id, '–ù–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ —Ç–∞–∫–æ–≥–æ –Ω–µ –±—ã–ª–æ!')


@bot.message_handler(func=lambda msg: dbworker.get_current_state(msg.chat.id) == States.KUSH.value)
def before_final(msg):
    if msg.text in kush_list:
        Target.add_to_query(msg.text)
        if exist_phone(msg.chat.id):
            bot.send_message(msg.chat.id, db_get_link(*Target.show_query() ) )
            bot.send_message(msg.chat.id, '‚òùÔ∏è –≤–æ—Ç –≤–∞—à–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –ø–æ–¥–±–æ—Ä–∫–∞' )
            bot.send_message(msg.chat.id,
                            '<i>–î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –í—ã –ø–µ—Ä–µ–Ω–µ–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</i>',
                            reply_markup=menu_markup, disable_notification=True)
        else:
            bot.send_message(msg.chat.id, '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–±–æ—Ä–∫—É - –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=phone_markup)
            dbworker.set_state(msg.chat.id, States.PHONE.value)


@bot.message_handler(content_types=['contact'])
def handle_contact(msg):
    phone = msg.contact.phone_number
    if dbworker.get_current_state(msg.from_user.id) == States.PHONE.value:
        phone = msg.contact.phone_number
        bot.send_message(msg.chat.id, db_get_link(*Target.show_query() ) )
        bot.send_message(msg.chat.id, '‚òùÔ∏è –≤–æ—Ç –≤–∞—à–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –ø–æ–¥–±–æ—Ä–∫–∞' )
        bot.send_message(msg.chat.id,
                                '<i>–î–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –í—ã –ø–µ—Ä–µ–Ω–µ–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</i>',
                                reply_markup=menu_markup,  disable_notification=True)
        Target.clear_query()

    else:
        bot.send_message(msg.chat.id,
                        '–û–ø–µ—Ä–∞—Ç–æ—Ä —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, –±–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ !')
        bot.send_message(teh_channel, f'–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞:\n{phone}')
        bot.send_message(msg.chat.id, '<i>–ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</i>',
                        reply_markup=menu_markup, disable_notification=True)
    # print('!!!___!!! ', msg)
    if exist_phone(msg.from_user.id):   # type contact not contains chat
            pass
    else:
         db_insert_phone(msg.from_user.id, phone)







@bot.message_handler(content_types=['text'])
def investment(msg):
    chat_id = msg.chat.id
    msg = bot.send_message(chat_id,
                           '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π  /start',
                           reply_markup=general_markup)





bot.infinity_polling(interval=1.5, timeout=80 )
